{
  "appCss": [
    ".App {",
    "    text-align: center;",
    "  }",
    "  ",
    "  .App-logo {",
    "    height: 40vmin;",
    "    pointer-events: none;",
    "  }",
    "  ",
    "  @media (prefers-reduced-motion: no-preference) {",
    "    .App-logo {",
    "      animation: App-logo-spin infinite 20s linear;",
    "    }",
    "  }",
    "  ",
    "  .App-header {",
    "    background-color: #282c34;",
    "    min-height: 100vh;",
    "    display: flex;",
    "    flex-direction: column;",
    "    align-items: center;",
    "    justify-content: center;",
    "    font-size: calc(10px + 2vmin);",
    "    color: white;",
    "  }",
    "  ",
    "  .App-link {",
    "    color: #61dafb;",
    "  }",
    "  ",
    "  @keyframes App-logo-spin {",
    "    from {",
    "      transform: rotate(0deg);",
    "    }",
    "    to {",
    "      transform: rotate(360deg);",
    "    }",
    "  }"
  ],
  "appJs": [
    "import './App.css';",
    "",
    "function App() {",
    "  return (",
    "    <div className='App'>",
    "      <header className='App-header'>",
    "        <img src={logo} className='App-logo' alt='logo' />",
    "        <p>",
    "          Edit <code>src/App.js</code> and save to reload.",
    "        </p>",
    "        <a",
    "          className='App-link'",
    "          href='https://reactjs.org'",
    "          target='_blank'",
    "          rel='noopener noreferrer'",
    "        >",
    "          Learn React",
    "        </a>",
    "      </header>",
    "    </div>",
    "  );",
    "}",
    "",
    "export default App;"
  ],
  "appTest": [
    "import { render, screen } from '@testing-library/react';",
    "import App from './App';",
    "",
    "test('renders learn react link', () => {",
    "  render(<App />);",
    "  const linkElement = screen.getByText(/learn react/i);",
    "  expect(linkElement).toBeInTheDocument();",
    "});"
  ],
  "indexCSS": [
    "body {",
    "  margin: 0;",
    "  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',",
    "    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',",
    "    sans-serif;",
    "  -webkit-font-smoothing: antialiased;",
    "  -moz-osx-font-smoothing: grayscale;",
    "}",
    "",
    "code {",
    "  font-family:  source-code-pro, Menlo, Monaco, Consolas, 'Courier New',",
    "monospace;",
    "}"
  ],
  "indexJS": [
    "import React from 'react';",
    "import ReactDOM from 'react-dom/client';",
    "import './index.css';",
    "import App from './App';",
    "import reportWebVitals from './reportWebVitals';",
    "",
    "const root = ReactDOM.createRoot(document.getElementById('root'));",
    "root.render(",
    "  <React.StrictMode>",
    "    <App />",
    "  </React.StrictMode>",
    ");",
    "reportWebVitals();"
  ],
  "reportWebVitals": [
    "const reportWebVitals = onPerfEntry => {",
    "  if (onPerfEntry && onPerfEntry instanceof Function) {",
    "    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {",
    "      getCLS(onPerfEntry);",
    "      getFID(onPerfEntry);",
    "      getFCP(onPerfEntry);",
    "      getLCP(onPerfEntry);",
    "      getTTFB(onPerfEntry);",
    "    });",
    "  }",
    "};",
    "",
    "export default reportWebVitals;"
  ],
  "setupTests": ["import '@testing-library/jest-dom';"]
}
